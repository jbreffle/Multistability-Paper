% test_zipf_from_samples.m
%
% The code plots data generated by sampling from the log-normal
% distribution to demonstrate an approximate power law,
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

clear
load('test_lognormal_samples_5.mat')

visits = sampled_n;

% num_nets = max(all_visits(:,2));
    sort_visits = sort(visits','descend');
    ls = log10(sort_visits);
    ln = log10(1:length(ls))';
    
    fitvals = find(sort_visits>5)';
    num_fit = length(fitvals);

    [f g] = fit(ln(fitvals),ls(fitvals),'poly1')
    
    set(0,'DefaultLineLineWidth', 3);
    set(0,'DefaultAxesFontSize',20);

    set(0,'DefaultLineMarkerSize',10);
       
    
    figure(1)
    clf
    hold on
    plot(ln,f.p2+ln*f.p1,'--')
    plot(ln,ls,'.')

    set(gca,'XTick',[0 1 2 3 4])
    set(gca,'YTick',[0 2 4 6])
    set(gca,'XTickLabel',{'1', '10', '100', '1000', '10^{4}'})
    set(gca,'YTickLabel',{'1', '100', '10^{4}', '10^{6}'})

    axis([0 4.5 -0.5 6])
    xlabel('Rank')
    ylabel('No. of Samples')
    
    rsq = g.adjrsquare;
%    fitted_vals(net) = num_fit

    figure(2)
    clf
    csd = cumsum(sort_visits);
    plot(ls,log10(csd),'o')
    [f2 g2] = fit(ls(fitvals),log10(csd(fitvals)),'poly1')
    rsq2 = g2.adjrsquare;

% end    

